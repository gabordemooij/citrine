program ::-> statement dot {statement}
statement ::-> expression| return_token expression | fin
fin ::-> endofprogram
expression ::-> receiver re_object
re_object ::->  assignment_token assignment| messages
assignment ::->  expression
receiver ::->  nil |  true |  false | number | string | ref | block | popen
ref ::-> [my_ref | var_ref ] name
block ::-> "{" { ref } "|" block_main "." "}" 
block_main ::-> return_token expression | expression
popen ::-> "(" expression ")"
messages ::->  [ref | chain ] message messages | empty
message ::->  bin expression | colon expression {expression} | unary_message
unary_message ::-> name
nil ::-> nil_object
true ::-> true_object
false ::-> false_object
string ::-> string_object
number ::-> number_object
string_object ::-> '"' alphabet* '"'
alphabet ::-> [A-Za-z0-9]
my_ref ::-> "my" 
var_ref ::-> "var" 
nil_object ::-> "Nil"
true_object ::-> "True"
false_object ::-> "False"
number_object ::-> [0-9]* | [0-9] . [0-9]+
popen ::-> "(" expression ")"
assignment_token ::-> ":="
return_token ::-> "^"
bin ::-> "+"|"-"|"/"|"*"|"<"|">"|"=" 
chain ::-> ","
colon ::-> ":"
dot ::-> "."
name ::-> [A-Za-z][A-Za-z]*
