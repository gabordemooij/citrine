CC = x86_64-w64-mingw32-gcc
DLLTOOL ?= x86_64-w64-mingw32-dlltool

BUILD_DIR         = ./build/Win64
BUILD_OBJ_DIR     = $(BUILD_DIR)/obj
BUILD_BIN_DIR     = $(BUILD_DIR)/bin
BIN               = xo.exe
CFLAGS            = -O2 -g -mtune=native -Wpedantic -Wall -I src/i18n/en -D CTRLANG=en -D INCLUDETESTS \
	   -D WIN\
       -D REPLACE_ERROR_SYSTEM     -D WINDOWS_ERROR_SYSTEM\
       -D REPLACE_PROGRAM_PASSWORD -D WINDOWS_PROGRAM_PASSWORD\
       -D REPLACE_PLUGIN_SYSTEM    -D WINDOWS_PLUGIN_SYSTEM\
       -D REPLACE_CLOCK_WAIT       -D WINDOWS_CLOCK_WAIT\
       -D WINDOWS64_SETENV

LDFLAGS           = -g -lm
CSRCS             = $(shell find ./src -maxdepth 1 -type f -name '*.c')
COBJS             = $(patsubst ./src/%.c, $(BUILD_OBJ_DIR)/%.o, $(CSRCS))
TARGET            = $(COBJS)

all: xo

xo: $(TARGET)
	@mkdir -p $(BUILD_BIN_DIR)
	$(CC) $(TARGET) $(LDFLAGS) -shared -o $(BUILD_BIN_DIR)/$(BIN)
	gendef - $(BUILD_BIN_DIR)/$(BIN) > $(BUILD_DIR)/ctren.def
	$(DLLTOOL) -d $(BUILD_DIR)/ctren.def -l $(BUILD_DIR)/ctrenimport.lib -e $(BUILD_OBJ_DIR)/ctrenexports.o
	$(CC) $(BUILD_OBJ_DIR)/ctrenexports.o $(TARGET) $(LDFLAGS) -o $(BUILD_BIN_DIR)/$(BIN)


$(BUILD_OBJ_DIR)/%.o: ./src/%.c
	@mkdir -p $(BUILD_OBJ_DIR)
	$(CC) $(CFLAGS) $(EXTRACFLAGS) -c $< -o $@

clean:
	rm  $(BUILD_OBJ_DIR)/* $(BUILD_BIN_DIR)/$(BIN)

plugin:
	cd src/plugins/${PACKAGE} ; make -f makefile.win64 all

plugin-clean:
	cd src/plugins/${PACKAGE} ; make -f makefile.win64 clean

