Number on: 'factorial' do: {
	☞ total := 1.
	{ :index total multiply by: (⛏ - index). } * ⛏.
	↲ total.
}.

☞ usedMemory1 := 0.
☞ usedMemory2 := 0.
☞ usedMemory3 := 0.
☞ usedMemory4 := 0.

Program tidiness: 0.

{
2 exponent factorial.
✎ write: (11 modulo: 3), stop.
✎ write: (3.4 round), stop.
✎ write: (7.1 ceil), stop.
✎ write: (7.9 floor), stop.
}
run.

Program clean memory.

usedMemory1 := (Program memory ? 1).

{
2 exponent factorial.
✎ write: (11 modulo: 3), stop.
✎ write: (3.4 round), stop.
✎ write: (7.1 ceil), stop.
✎ write: (7.9 floor), stop.
}
run.

Program clean memory.
usedMemory2 := (Program memory ? 1).


{
2 exponent factorial.
✎ write: (11 modulo: 3), stop.
✎ write: (3.4 round), stop.
✎ write: (7.1 ceil), stop.
✎ write: (7.9 floor), stop.
} run.

Program clean memory.
usedMemory3 := (Program memory ? 1).



( usedMemory1 = usedMemory2 and: usedMemory1 = usedMemory3, and: usedMemory2 = usedMemory3 ) true: {
	✎ write: 'No memory leaks here'.
}, false: {
	✎ write: 'Leaking memory...'.
}.
