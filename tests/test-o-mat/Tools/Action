☞ Action ≔ Object new.
Action on: ‘init’ do: {
	⚿ base       ≔ ‘’.
	⚿ input      ≔ Nil.
	⚿ name       ≔ ‘’.
	⚿ options    ≔ ‘’.
	⚿ target     ≔ ‘’.
	⚿ output     ≔ ‘’.
	⚿ outfile    ≔ Nil.
	⚿ logfile    ≔ Nil.
	⚿ log        ≔ ‘’.
	⚿ parameters ≔ Map new.
}.
Action on: ‘new’ do: {
	☞ action ≔ ⛏ new.
	action init.
	↲ action.
}.
Action on: ‘string’ do: {
	☞ command ≔ ‘’.
	(⚿ input ≠ Nil ) true: {
		command	
			append: ⚿ input recursive string,
			append: ‘ | ’.
	}.
	command append: ( ⚿ name  + ‘ ’ + ⚿ options + ‘ ’ +  ⚿ target + ⚿ output + ⚿ log ).
	⚿ parameters each: { :name :value
		command replace: name with: value.
	}.
	↲ command.
}.
Action on: ‘respond:and:’ do: { :parameter :value
	⚿ parameters put: value at: (parameter - ‘:’). 
}.
Action on: ‘name:’ do: { :name ⚿ name ≔ ⚿ base + name string. }.
Action on: ‘command:’ do: { :name ⚿ name ≔ name string. }.
Action on: ‘target:’ do: { :target ⚿ target ≔ ⚿ base + target. }.
Action on: ‘log:’ do: { :log ⚿ log ≔ ‘ 2>’ + ⚿ base + log. ⚿ logfile ≔ (⚿ base + log). }.
Action on: ‘append to log:’ do: { :log ⚿ log ≔ ‘ 2>>’ + ⚿ base + log. ⚿ logfile ≔ (⚿ base + log). }.
Action on: ‘output:’ do: { :output ⚿ output ≔ ‘ 1>’ + ⚿ base + output. ⚿ outfile ≔ (⚿ base + output). }.
Action on: ‘append:’ do: { :output ⚿ output ≔ ‘ 1>>’ + ⚿ base + output. ⚿ outfile ≔ (⚿ base + output). }.
Action on: ‘observation’ do: { 
	☞ path ≔ ⚿ outfile copy.
	☞ logpath ≔ ⚿ logfile copy.
	⚿ parameters each: { :name :value
		path replace: name with: value.
		logpath replace: name with: value.
	}.
	↲ ((File new: path) read + (File new: logpath) read).
}.
Action on: ‘options:’ do: { :options ⚿ options ≔ options. }.
Action on: ‘option:file:’ do: { :option :value ⚿ options append: (option + ‘ ’ + ⚿ base + value). }.
Action on: ‘input:’ do: { :input ⚿ input ≔ input. }.
Action on: ‘current folder’ do: { ⚿ base ≔ ‘./’. }.
Action on: ‘parent folder’ do: { ⚿ base ≔ ‘../’. }.
Action on: ‘base folder:’ do: { :base ⚿ base ≔ base. }.
Action on: ‘info’ do: { ✎ write: ⚿ name, write: ⚿ options, stop. }.
