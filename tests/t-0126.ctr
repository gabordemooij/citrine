#Linux
>> Slurp := Object new.

Slurp on: ['new'] do: {
	own str := [''].
}.

Slurp on: ['nieuw'] do: {
	own str := [''].
}.

Slurp on: ['respond:'] do: { :blah
		own str append: blah.
}.

Slurp on: ['respond:and:'] do: { :blah :blahah
		own str append: (blah from: 0 length: (blah length - 1)).
		own str append: [' '].
		own str append: blahah.
}.

Slurp on: ['obtain'] do: {
	>> buffer := own str.
	own str := ['']. <- buffer.
}.


Out write: (Program os: (Slurp new echo: ['Hello I can write to console using fluid API!'], obtain)).


{ File new: ['/tmp/from.txt'], delete. } except: { ['Empty']. }, start.
{ File new: ['/tmp/to.txt'], delete. } except: { ['Empty']. }, start.


File new: ['/tmp/to.txt'], exists false: {
	Out write: ['Confirmed. Target file does not exist.\
'].
}.
File new: ['/tmp/from.txt'], exists false: {
	Out write: ['Confirmed. Source file does not exist.\
'].
}.



Program os: (Slurp new touch: ['/tmp/from.txt ;'], echo: ['"hello world" > /tmp/from.txt'], obtain).



Program os: (Slurp new cp: ['/tmp/from.txt /tmp/to.txt'], obtain).

File new: ['/tmp/to.txt'], exists true: {
	Out write: ['Confirmed. Target file has been created by shell.\
'].
}.


Out write: ['Contents of file is:'] + (File new: ['/tmp/to.txt'], read), stop.
