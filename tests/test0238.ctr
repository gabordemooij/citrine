'SINGLE_LANGUAGE'.
String on: 'evaluate' do: {
	☞ code := File new: '/tmp/eval.ctr'.
	code write: (⛏ string + '.').
	Program use: '/tmp/eval.ctr'.
}.

☞ a := List ← 1 ; 2 ; 3.
☞ b := (a string).

✎ write: b, stop. 
('b := ' + b) evaluate.

✎ write: b ? 3, stop. 

✎ write: (( List ← 1 ; 2 ; 3 )), stop. 

✎ write: ((Map new) put: 1 at: 2), stop. 

☞ x := ( (List ← 1 ; ( List ← 9 ) ; True ) ) string.
✎ write: x, stop. 
('x := ' + x) evaluate.

✎ write: x ? 2 ? 1, stop. 

☞ y := (Map new) put: (List ← 1) at: (List ← 2).
✎ write: y, stop. 

('y := ' + y) string evaluate.

✎ write: (y at: (List ← 2) string ), stop.

✎ write: (List new), stop. 
✎ write: (Map new), stop. 
