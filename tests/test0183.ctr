

☞ usedMemory1 := 0.
☞ usedMemory2 := 0.
☞ usedMemory3 := 0.
☞ usedMemory4 := 0.

Program tidiness: 0.

☞ o  := Object new.
☞ o2 := Object new.
✎ write: o Nil?, stop.
✎ write: o type, stop.
✎ write: ( o equals: o ), stop.
✎ write: ( o equals: o2 ), stop.
✎ write: o myself, stop.
✎ write: ( o do done ), stop.

Program clean memory.

usedMemory1 := (Program memory ? 1).


o  := Object new.
o2 := Object new.
✎ write: o Nil?, stop.
✎ write: o type, stop.
✎ write: ( o equals: o ), stop.
✎ write: ( o equals: o2 ), stop.
✎ write: o myself, stop.
✎ write: ( o do done ), stop.

Program clean memory.
usedMemory2 := (Program memory ? 1).


o  := Object new.
o2 := Object new.
✎ write: o Nil?, stop.
✎ write: o type, stop.
✎ write: ( o equals: o ), stop.
✎ write: ( o equals: o2 ), stop.
✎ write: o myself, stop.
✎ write: ( o do done ), stop.

Program clean memory.
usedMemory3 := (Program memory ? 1).



( usedMemory1 = usedMemory2 and: usedMemory1 = usedMemory3, and: usedMemory2 = usedMemory3 ) true: {
	✎ write: 'No memory leaks here'.
}, false: {
	✎ write: 'Leaking memory...'.
}.
