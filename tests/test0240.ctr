'SINGLE_LANGUAGE'.
☞ $ := Object new.

$ on: 'respond:' do: { :x
	
	☞ operation := x character: 1.
	☞ valuta    := x character: 2.
	☞ money     := x offset: 3.
	
	☞ xmoney := x from: 3 length: 10.
	
	☞ amount    := 0.

	( operation = '+' ) true: {
		( valuta = '£' ) true: { amount := 1.28 * money. }.
	}.
	
	↲ amount.
}.



☞ x := $ +£20.

✎ write: x, stop.


☞ Fruit := Object new.

Fruit on: 'new' do: {
	☞ f := ⛏ `new.
	f apples: 0.
	f oranges: 0.
	↲ f.
}.

Fruit on: 'apples:' do: { :a ⚿ apples := a. }.
Fruit on: 'oranges:' do: { :p ⚿ oranges := p. }.
Fruit on: 'apples' do: { ↲ ⚿ apples. }.
Fruit on: 'oranges' do: { ↲ ⚿ oranges. }.

Fruit on: '+' do: { :f
	
	☞ n := Fruit new.
	f add: 1.
	
	n apples: (f apples + ⚿ apples).
	n oranges:  (f oranges  + ⚿ oranges).
	↲ n.
}.

Fruit on: 'string' do: {
	
	↲ ( ⚿ apples string + ' apples and ' + ⚿ oranges + ' oranges' ).
}.

Number on: 'apples' do: {
	↲ ((Fruit new) apples: ⛏).
}.

Number on: 'apple' do: {
	↲ ((Fruit new) apples: ⛏).
}.

Number on: 'oranges' do: {
	↲ ((Fruit new) oranges: ⛏).
}.




✎ write: (1 apple + 3 oranges + 4 apples), stop.


String on: 'twice' do: {
	↲ ((⛏ string) + (⛏ string)).
}.



✎ write: '❤❤❤' twice.



