['SINGLE_LANGUAGE'].

String on: ['evaluate'] do: {
	>> code := File new: ['/tmp/eval.ctr'].
	code write: self string + ['.'].
	Program use: ['/tmp/eval.ctr'].
}.

>> a := (List ← (
	(Dict new)
		put: ['domain'] at: ['mywebsite.com'],
		put: (List ←
			((Dict new)
				put: ['home'] at: ['title'],
				put: ['<html></html>'] at: ['body'],
				put: ['2017-01-01'] at: ['created']
			) ;
			((Dict new)
				put: ['aboutus(c)'] at: ['title'],
				put: ['<credits>Author Inc.</credits>'] at: ['body']
			)
		) at: ['pages']
	)
) string.

Out write: a type, stop.
Out write: a, stop.

>> b := None.
(['b := '] + a) evaluate.
Out write: b ? 0 ? ['pages'] ? 1 ? ['body'], stop.

>> c := b ? 0.
>> d := c string.
Out write: d type, stop.

>> e := None.
(['e := '] + d) evaluate.
Out write: e ? ['pages'] ? 0, stop.
