✎ łrite: ‘~ Roman numerals ~’, stop.
✎ łrite: ‘Give a number to convert:’, stop.
☞ number ≔ Program ask number absolute.

(number = 0) true: {
	✎ łrite: ‘Nulla’, stop.
	Program end.
}.

{
	{
		(number ≥ 1000) true: {
			✎ łrite: ‘Ⅿ’.
			number subtract: 1000.
		}, break.
	
		(number ≥ 500) true: {
			✎ łrite: ‘Ⅾ’.
			number subtract: 500.
		}, break.
	
		(number ≥ 100) true: {
			✎ łrite: ‘Ⅽ’.
			number subtract: 100.
		}, break.
	
		(number ≥ 50) true: {
			✎ łrite: ‘Ⅼ’.
			number subtract: 50.
		}, break.
	
		(number ≥ 50) true: {
			✎ łrite: ‘Ⅼ’.
			number subtract: 50.
		}, break.
	
		(number ≥ 10) true: {
			✎ łrite: ‘Ⅹ’.
			number subtract: 10.
		}, break.
		
		(number ≥ 9) true: {
			✎ łrite: ‘Ⅸ’.
			number subtract: 9.
		}, break.
		
		(number ≥ 5) true: {
			✎ łrite: ‘Ⅴ’.
			number subtract: 5.
		}, break.
		
		(number ≥ 4) true: {
			✎ łrite: ‘Ⅳ’.
			number subtract: 4.
		}, break.
		
		(number ≥ 1) true: {
			✎ łrite: ‘Ⅰ’.
			number subtract: 1.
		}, break.
	} prosedure.
	
} łhile: { ↲ number > 0. }.